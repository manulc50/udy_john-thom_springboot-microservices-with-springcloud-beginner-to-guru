# Spring Cloud Configuration tiene 2 endpoint "encrypt" y "decrypt" que encripta y desencripta el cuerpo o body de peticiones http Post
# Como esta aplicación se ejecuta en el puerto 8888, si se lanza la petición http Post a "http://localhost:8888/encrypt" con el cuerpo o body "MyPassword", la respuesta es el contenido de ese cuerpo o body encriptado usando la Key o Clave indicada en la propiedad "encrypt.key", es decir, devuelve como respuesta "d751579cff09548b49993e65d475f7b40e32004733a245aa462fedf8ee4f667d" 
# Por el contrario, si se lanza la petición http Post a "http://localhost:8888/decrypt" con el cuerpo o body "d751579cff09548b49993e65d475f7b40e32004733a245aa462fedf8ee4f667d", la respuesta es el contenido de ese cuerpo o body desencriptado usando la Key o Clave indicada en la propiedad "encrypt.key", es decir, devuelve como respuesta "MyPassword"(proceso inverso al endpoint "encrypt")
# Nota: Esta propiedad tiene que aplicarse en este archivo "bootstrap.properties".No se aplica o no funciona si se define en el archivo "application.properties"
# Key o clave para encriptar y desencriptar
# Should be an environment property
encrypt.key=MySuperSecretKey

# Propiedad para indicar la url donde se encuentra nuestro servidor Eureka y nos permite también indicar las credenciales(usuario/contraseña) requeridas por dicho servidor mediante autenticación básica, "Http Basic"
eureka.client.service-url.defaultZone=http://netflix:eureka@localhost:8761/eureka